<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    >
    <!--红色-->
    <View
        android:layout_width="100dp"
        android:layout_height="100dp"
        android:layout_margin="60dp"
        android:background="#ff0000"
        android:elevation="11dp"/>
    <!--绿色-->
    <View
        android:layout_width="100dp"
        android:layout_height="100dp"
        android:layout_margin="100dp"
        android:background="#00ff00"
        android:elevation="10dp"/>

    <!--圆形的shape-->
    <!--  可以通过android:outlineProvider来指定轮廓的判定方式：
      1. none 即使设置了Z属性，也不会显示阴影
      2. background 会按照背景来设置阴影形状
      3. bounds 会按照View的大小来描绘阴影
      4. paddedBounds 和bounds类似，不过阴影会稍微向右偏移一点-->
    <View
        android:layout_width="100dp"
        android:layout_height="100dp"
        android:layout_marginLeft="180dp"
        android:layout_marginTop="180dp"
        android:background="@drawable/shape_circle"
        android:elevation="10dp"
        android:outlineProvider="background"/>
    <!--圆形的图片-->
    <!--如果采用图片作为背景，即使在xml布局中指定android:outlineProvider为background也不会显示阴影，只有通过代码中指定轮廓来显示。-->
    <View

        android:id="@+id/ivHead"
        android:layout_width="100dp"
        android:layout_height="100dp"
        android:layout_marginLeft="180dp"
        android:layout_marginTop="300dp"
        android:background="@mipmap/head"
        android:elevation="10dp"/>
</RelativeLayout>
